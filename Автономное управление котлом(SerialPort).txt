// Блок кнопок и выводов
const byte saveMode = 8;  // Фиксируем новое значение ШИМ для текущей температуры в Стартовых установках
const byte FREE = 5;  // !!!Не задействованный вывод!!!
const byte minus = 3;  // Минус 5 градусов
const byte info = 4;  // Мгновенная температура котла
const byte plus = 2;  // Плюс 5 градусов
const byte OnOff_ALARMA = 7;  // Выключатель контроля прекращения горения
const byte ALARMA = 6;  // Динамик тревоги
const byte SCLK = 9;  // Для 7-сегментного дисплея
const byte RCLK = 10;  // Для 7-сегментного дисплея
const byte DIO = 11;  // Для 7-сегментного дисплея
const byte SHIM = 12;  // ШИМ для управления мотором

// Библиотеки
#include <TM74HC595Display.h>  // Библиотека конкретного 7-сегментного дисплея
TM74HC595Display disp(SCLK, RCLK, DIO);  // Иниициализация нашего 7-сегментного дисплея

// Атрибуты термодатчика
int analogPin = 0;  // Аналоговый вход для считывания напряжения с делителя напряжения
float Vout = 0;  // Переменная для хранения значения напряжения в средней точки делителя (0-5,0)
word R1 = 9640;  // Подтягивающий резистор R1 на 10кОм
int RTermopari;  // Сопротивление термодатчика на котле
int tCFakticheskaya;  // Фактическая температура по Цельсию на датчике

// Атрибуты котла
unsigned long checkTimerTemp = 300000;  // Промежуток времени (мс), через который происходит контроль температуры
unsigned long cacheMillis = millis();  // Хранение значение таймера
int tCJelaemaya = 75;  // Желаемая температура по Цельсию на датчике
int moshnostSHIM = 39;  // Диапазон 0-255 значений, соответствующий мощности маслонасоса
int minOboroti = 77;  // Размер ШИМ сигнала, граница рабочего диапазона
int maxOboroti = 153;  // Размер ШИМ сигнала, граница рабочего диапазона
unsigned long cacheGisterezis = 2;  // В переменной число (чётное/нечётное) для Калибровки при нагревании через раз

void setup()
{
	Serial.begin(9600);  // Подготовка Serial Monitor для вывода информации
	
	pinMode(saveMode, INPUT);
	digitalWrite(saveMode, HIGH);
	
	pinMode(FREE, INPUT);
	digitalWrite(FREE, HIGH);
	
	pinMode(minus, INPUT);
	digitalWrite(minus, HIGH);
	
	pinMode(info, INPUT);
	digitalWrite(info, HIGH);
	
	pinMode(plus, INPUT);
	digitalWrite(plus, HIGH);
	
	pinMode(OnOff_ALARMA, INPUT);
	digitalWrite(OnOff_ALARMA, HIGH);
	
	pinMode(ALARMA, OUTPUT);
	
	pinMode(SHIM, OUTPUT);
	
	temperatura();
	kalibrovka();
}

void loop()
{
	if (digitalRead(OnOff_ALARMA) == LOW)
	{
		temperatura();
		if (tCFakticheskaya < 30)
		{
			moshnostSHIM = 0;
			analogWrite(SHIM, moshnostSHIM);
			digitalWrite(ALARMA, HIGH);
			showNumber_7Segm(8888);
		}
		else
		{
			digitalWrite(ALARMA, LOW);
			showNumber_7Segm(tCJelaemaya);
			controlKotel();
		}
	}
	else
	{
		digitalWrite(ALARMA, LOW);
		showNumber_7Segm(tCJelaemaya);
		controlKotel();
	}
}

void controlKotel()
{
	if (digitalRead(minus) == LOW)
	{
		temperatura();
		if (tCJelaemaya >= 35 && tCJelaemaya <= 80)
		{
			tCJelaemaya = tCJelaemaya - 5;  // Понижаем на 5 градусов желаемую температуру котла
			delay(100);
			temperatura();
			kalibrovka();
			showNumber_7Segm(tCJelaemaya);
			cacheMillis = millis();
		}
	}

	if (digitalRead(info) == LOW)
	{
		temperatura();
		for (int i=0; i <= 1000; i++)
		{
			showNumber_7Segm(tCFakticheskaya);
		}
		showNumber_7Segm(tCJelaemaya);
	}

	if (digitalRead(plus) == LOW)
	{
		temperatura();
		if (tCJelaemaya >= 30 && tCJelaemaya <= 75)
		{
			tCJelaemaya = tCJelaemaya + 5;  // Повышаем на 5 градусов желаемую температуру котла
			delay(100);
			temperatura();
			kalibrovka();
			showNumber_7Segm(tCJelaemaya);
			cacheMillis = millis();
		}
	}
	
	if (tCFakticheskaya > 80)
	{
		moshnostSHIM = 0;
		analogWrite(SHIM, moshnostSHIM);
	}
	
	if (millis() - cacheMillis > checkTimerTemp)
	{
		kalibrovka();
		cacheMillis = millis();
	}
}

void kalibrovka()
{
	serialPort()
	temperatura();
	
	if (tCFakticheskaya > tCJelaemaya)
	{
		if (tCFakticheskaya - tCJelaemaya > 4)
		{
			moshnostSHIM = moshnostSHIM + 13;  // Эквивалентно изменению оборотов на 5%
			moshnostSHIM = constrain(moshnostSHIM, minOboroti, maxOboroti);  // Контролируем, чтобы значение оставалось в рабочем диапазоне
			analogWrite(SHIM, moshnostSHIM);
		}
	}
	else
	{
		if (cacheGisterezis & 2)
		{
			if (tCJelaemaya - tCFakticheskaya > 4)
			{
				moshnostSHIM = moshnostSHIM - 13;  // Эквивалентно изменению оборотов на 5%
				moshnostSHIM = constrain(moshnostSHIM, minOboroti, maxOboroti);  // Контролируем, чтобы значение оставалось в рабочем диапазоне
				analogWrite(SHIM, moshnostSHIM);
			}
			
			cacheGisterezis++;
		}
	}
	
	temperatura();
}

void temperatura()
{
	Vout = (5.0 / 1023.0) * analogRead(analogPin);  // Вычисляем напряжение в средней точки делителя (0-5.0)
	RTermopari = R1 / ((5 / Vout) - 1);  // Вычисляем сопротивление термодатчика

	if (RTermopari >= 889)
	{
		if (RTermopari >= 2438)
		{
			if (RTermopari >= 5700)
			{
				tCFakticheskaya = 1;
			}
			if (RTermopari >= 4800 && RTermopari < 5700)
			{
				tCFakticheskaya = 10;
			}
			if (RTermopari >= 3805 && RTermopari < 4800)
			{
				tCFakticheskaya = 15;
			}
			if (RTermopari >= 3036 && RTermopari < 3805)
			{
				tCFakticheskaya = 20;
			}
			if (RTermopari >= 2438 && RTermopari < 3036)
			{
				tCFakticheskaya = 25;
			}
		}
		if (RTermopari < 2438)
		{
			if (RTermopari >= 1970 && RTermopari < 2438)
			{
				tCFakticheskaya = 30;
			}
			if (RTermopari >= 1601 && RTermopari < 1970)
			{
				tCFakticheskaya = 35;
			}
			if (RTermopari >= 1309 && RTermopari < 1601)
			{
				tCFakticheskaya = 40;
			}
			if (RTermopari >= 1076 && RTermopari < 1309)
			{
				tCFakticheskaya = 45;
			}
			if (RTermopari >= 889 && RTermopari < 1076)
			{
				tCFakticheskaya = 50;
			}
		}
	}

	if (RTermopari < 889)
	{
		if (RTermopari >= 369)
		{
			if (RTermopari >= 738 && RTermopari < 889)
			{
				tCFakticheskaya = 55;
			}
			if (RTermopari >= 616 && RTermopari < 738)
			{
				tCFakticheskaya = 60;
			}
			if (RTermopari >= 517 && RTermopari < 616)
			{
				tCFakticheskaya = 65;
			}
			if (RTermopari >= 436 && RTermopari < 517)
			{
				tCFakticheskaya = 70;
			}
			if (RTermopari >= 369 && RTermopari < 436)
			{
				tCFakticheskaya = 75;
			}
		}
		if (RTermopari < 369)
		{
			if (RTermopari >= 313 && RTermopari < 369)
			{
				tCFakticheskaya = 80;
			}
			if (RTermopari >= 267 && RTermopari < 313)
			{
				tCFakticheskaya = 85;
			}
			if (RTermopari >= 210 && RTermopari < 267)
			{
				tCFakticheskaya = 90;
			}
			if (RTermopari < 210)
			{
				tCFakticheskaya = 99;
			}
		}
	}
}

void showNumber_7Segm(int value)
{
	disp.timerIsr();  // Пробуждаем дисплей
	disp.clear();
	disp.digit4(value);
}

void serialPort()
{
	//  Serial.print("Напряжение: ");
	Serial.print("Napryazhenie: ");
	Serial.println(Vout);  // Напряжения в средней точки делителя (0-5.0), для справки
	//  Serial.print("Сопротивление термодатчика на котле: ");
	Serial.print("Soprotivlenie termodatchika na kotle: ");
	Serial.println(RTermopari);
	//  Serial.print("Температура термодатчика на котле: ");
	Serial.print("Temperatura termodatCFakticheskayahika na kotle: ");
	Serial.println(tCFakticheskaya);
	//  Serial.print("Желаемая температура котла: ");
	Serial.print("Jelaemaya temperatura kotla: ");
	Serial.println(tCJelaemaya);
	//  Serial.print("Мощность маслонасоса: ");
	Serial.print("Moshhnost maslonasosa: ");
	Serial.print(map(moshnostSHIM, 0, 255, 0, 100));
	Serial.println("%");
	Serial.println();
}